server:
  port: 8071
spring:
  application:
    name: configserver
  profiles:
    active:
  # el perfil native, indica que la configuracion se leerá desde el sistema de archivos local
    #- native
    - git
  cloud:
    config:
      server:
        #native:
        #  search-locations:
          #- "classpath:/config"   
        #  - "file:///home/joselopez/ambientedev/cursos/microservices/eazybytes/config"
        git:
          uri: "https://github.com/joselopez-88/eazybytes-config.git"
        # Usa la rama main como fuente por defecto   
          default-label: main
        # timeout esta definido en segundos  
          timeout: 5
        # Hace que el repo se clone al arrancar el Config Server, en lugar de esperar a que llegue una primera petición. Esto ayuda a detectar errores de conexión desde el inicio.
          clone-on-start: true
        # Siempre intenta hacer git pull para obtener los últimos cambios, incluso si ya hay una copia local. Es útil si haces cambios en el repo y quieres que se reflejen sin reiniciar.  
          force-pull: true
encrypt:
  # La clave para cifrar y descifrar las propiedades
  # La clave debe ser de 16, 24 o 32 bytes
  key: "1A26Z2B25YV3D2F4D3F5A2B3C4D5F6A1"